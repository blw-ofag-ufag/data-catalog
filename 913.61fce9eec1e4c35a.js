"use strict";(self.webpackChunkDigiAgriFoodDB=self.webpackChunkDigiAgriFoodDB||[]).push([[913],{5913:(et,M,g)=>{g.r(M),g.d(M,{diagram:()=>Z});var K=g(467),b=g(8530),f=g(5011),D=g(3934),s=g(3721),T=g(4756),x={showLegend:!0,ticks:5,max:null,min:0,graticule:"circle"},C={axes:[],curves:[],options:x},p=structuredClone(C),I=s.UI.radar,P=(0,s.K2)(()=>(0,f.$t)({...I,...(0,s.zj)().radar}),"getConfig"),A=(0,s.K2)(()=>p.axes,"getAxes"),R=(0,s.K2)(()=>p.curves,"getCurves"),k=(0,s.K2)(()=>p.options,"getOptions"),S=(0,s.K2)(a=>{p.axes=a.map(t=>({name:t.name,label:t.label??t.name}))},"setAxes"),F=(0,s.K2)(a=>{p.curves=a.map(t=>({name:t.name,label:t.label??t.name,entries:B(t.entries)}))},"setCurves"),B=(0,s.K2)(a=>{if(null==a[0].axis)return a.map(e=>e.value);const t=A();if(0===t.length)throw new Error("Axes must be populated before curves for reference entries");return t.map(e=>{const r=a.find(n=>n.axis?.$refText===e.name);if(void 0===r)throw new Error("Missing entry for axis "+e.label);return r.value})},"computeCurveEntries"),v={getAxes:A,getCurves:R,getOptions:k,setAxes:S,setCurves:F,setOptions:(0,s.K2)(a=>{const t=a.reduce((e,r)=>(e[r.name]=r,e),{});p.options={showLegend:t.showLegend?.value??x.showLegend,ticks:t.ticks?.value??x.ticks,max:t.max?.value??x.max,min:t.min?.value??x.min,graticule:t.graticule?.value??x.graticule}},"setOptions"),getConfig:P,clear:(0,s.K2)(()=>{(0,s.IU)(),p=structuredClone(C)},"clear"),setAccTitle:s.SV,getAccTitle:s.iN,setDiagramTitle:s.ke,getDiagramTitle:s.ab,getAccDescription:s.m7,setAccDescription:s.EI},U=(0,s.K2)(a=>{(0,b.S)(a,v);const{axes:t,curves:e,options:r}=a;v.setAxes(t),v.setCurves(e),v.setOptions(r)},"populate"),G={parse:(0,s.K2)(function(){var a=(0,K.A)(function*(t){const e=yield(0,T.qg)("radar",t);s.Rm.debug(e),U(e)});return function(t){return a.apply(this,arguments)}}(),"parse")},z=(0,s.K2)((a,t,e,r)=>{const n=r.db,i=n.getAxes(),l=n.getCurves(),o=n.getOptions(),c=n.getConfig(),d=n.getDiagramTitle(),h=(0,D.D)(t),u=V(h,c),m=o.max??Math.max(...l.map(y=>Math.max(...y.entries))),_=o.min,$=Math.min(c.width,c.height)/2;H(u,i,$,o.ticks,o.graticule),J(u,i,$,c),w(u,i,l,_,m,o.graticule,c),O(u,l,o.showLegend,c),u.append("text").attr("class","radarTitle").text(d).attr("x",0).attr("y",-c.height/2-c.marginTop)},"draw"),V=(0,s.K2)((a,t)=>{const e=t.width+t.marginLeft+t.marginRight,r=t.height+t.marginTop+t.marginBottom,n_x=t.marginLeft+t.width/2,n_y=t.marginTop+t.height/2;return a.attr("viewbox",`0 0 ${e} ${r}`).attr("width",e).attr("height",r),a.append("g").attr("transform",`translate(${n_x}, ${n_y})`)},"drawFrame"),H=(0,s.K2)((a,t,e,r,n)=>{if("circle"===n)for(let i=0;i<r;i++){const l=e*(i+1)/r;a.append("circle").attr("r",l).attr("class","radarGraticule")}else if("polygon"===n){const i=t.length;for(let l=0;l<r;l++){const o=e*(l+1)/r,c=t.map((d,h)=>{const u=2*h*Math.PI/i-Math.PI/2;return`${o*Math.cos(u)},${o*Math.sin(u)}`}).join(" ");a.append("polygon").attr("points",c).attr("class","radarGraticule")}}},"drawGraticule"),J=(0,s.K2)((a,t,e,r)=>{const n=t.length;for(let i=0;i<n;i++){const l=t[i].label,o=2*i*Math.PI/n-Math.PI/2;a.append("line").attr("x1",0).attr("y1",0).attr("x2",e*r.axisScaleFactor*Math.cos(o)).attr("y2",e*r.axisScaleFactor*Math.sin(o)).attr("class","radarAxisLine"),a.append("text").text(l).attr("x",e*r.axisLabelFactor*Math.cos(o)).attr("y",e*r.axisLabelFactor*Math.sin(o)).attr("class","radarAxisLabel")}},"drawAxes");function w(a,t,e,r,n,i,l){const o=t.length,c=Math.min(l.width,l.height)/2;e.forEach((d,h)=>{if(d.entries.length!==o)return;const u=d.entries.map((m,_)=>{const $=2*Math.PI*_/o-Math.PI/2,y=E(m,r,n,c);return{x:y*Math.cos($),y:y*Math.sin($)}});"circle"===i?a.append("path").attr("d",L(u,l.curveTension)).attr("class",`radarCurve-${h}`):"polygon"===i&&a.append("polygon").attr("points",u.map(m=>`${m.x},${m.y}`).join(" ")).attr("class",`radarCurve-${h}`)})}function E(a,t,e,r){return r*(Math.min(Math.max(a,t),e)-t)/(e-t)}function L(a,t){const e=a.length;let r=`M${a[0].x},${a[0].y}`;for(let n=0;n<e;n++){const i=a[(n-1+e)%e],l=a[n],o=a[(n+1)%e],c=a[(n+2)%e],d={x:l.x+(o.x-i.x)*t,y:l.y+(o.y-i.y)*t},h={x:o.x-(c.x-l.x)*t,y:o.y-(c.y-l.y)*t};r+=` C${d.x},${d.y} ${h.x},${h.y} ${o.x},${o.y}`}return`${r} Z`}function O(a,t,e,r){if(!e)return;const n=3*(r.width/2+r.marginRight)/4,i=3*-(r.height/2+r.marginTop)/4;t.forEach((o,c)=>{const d=a.append("g").attr("transform",`translate(${n}, ${i+20*c})`);d.append("rect").attr("width",12).attr("height",12).attr("class",`radarLegendBox-${c}`),d.append("text").attr("x",16).attr("y",0).attr("class","radarLegendText").text(o.label)})}(0,s.K2)(w,"drawCurves"),(0,s.K2)(E,"relativeRadius"),(0,s.K2)(L,"closedRoundCurve"),(0,s.K2)(O,"drawLegend");var N={draw:z},Y=(0,s.K2)((a,t)=>{let e="";for(let r=0;r<a.THEME_COLOR_LIMIT;r++){const n=a[`cScale${r}`];e+=`\n\t\t.radarCurve-${r} {\n\t\t\tcolor: ${n};\n\t\t\tfill: ${n};\n\t\t\tfill-opacity: ${t.curveOpacity};\n\t\t\tstroke: ${n};\n\t\t\tstroke-width: ${t.curveStrokeWidth};\n\t\t}\n\t\t.radarLegendBox-${r} {\n\t\t\tfill: ${n};\n\t\t\tfill-opacity: ${t.curveOpacity};\n\t\t\tstroke: ${n};\n\t\t}\n\t\t`}return e},"genIndexStyles"),Q=(0,s.K2)(a=>{const t=(0,s.P$)(),e=(0,s.zj)(),r=(0,f.$t)(t,e.themeVariables);return{themeVariables:r,radarOptions:(0,f.$t)(r.radar,a)}},"buildRadarStyleOptions"),Z={parser:G,db:v,renderer:N,styles:(0,s.K2)(({radar:a}={})=>{const{themeVariables:t,radarOptions:e}=Q(a);return`\n\t.radarTitle {\n\t\tfont-size: ${t.fontSize};\n\t\tcolor: ${t.titleColor};\n\t\tdominant-baseline: hanging;\n\t\ttext-anchor: middle;\n\t}\n\t.radarAxisLine {\n\t\tstroke: ${e.axisColor};\n\t\tstroke-width: ${e.axisStrokeWidth};\n\t}\n\t.radarAxisLabel {\n\t\tdominant-baseline: middle;\n\t\ttext-anchor: middle;\n\t\tfont-size: ${e.axisLabelFontSize}px;\n\t\tcolor: ${e.axisColor};\n\t}\n\t.radarGraticule {\n\t\tfill: ${e.graticuleColor};\n\t\tfill-opacity: ${e.graticuleOpacity};\n\t\tstroke: ${e.graticuleColor};\n\t\tstroke-width: ${e.graticuleStrokeWidth};\n\t}\n\t.radarLegendText {\n\t\ttext-anchor: start;\n\t\tfont-size: ${e.legendFontSize}px;\n\t\tdominant-baseline: hanging;\n\t}\n\t${Y(t,e)}\n\t`},"styles")}}}]);